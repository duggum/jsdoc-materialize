{
  // Enforcing
  "bitwise"       : true, // true: Prohibit bitwise operators (&, |, ^, etc.)
  "curly"         : true, // true: Require {} for every new block or scope
  "eqeqeq"        : true, // true: Require triple equals (===) for comparison
  "es3"           : false, // true: Enforce ES3 syntax for older browsers—such as
  // Internet Explorer 6/7/8/9—and other legacy JavaScript environments.
  "es5"           : true, // true: Allow ES5 syntax (ex: getters and setters)
  "forin"         : true, // true: Require filtering for..in loops with obj.hasOwnProperty()
  "freeze"        : true, // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
  "funcscope"     : false, // true: Tolerate defining variables inside control statements
  "futurehostile" : true, // true: Enable warnings about the use of identifiers which are defined in future versions of JavaScript.
  "globalstrict"  : false, // true: Allow global "use strict" (also enables 'strict')
  "iterator"      : false, // true: Tolerate using the `__iterator__` property
  "latedef"       : true, // true: Require variables/functions to be defined before being used
  "maxcomplexity" : false, // {int} Max cyclomatic complexity per function
  "maxdepth"      : false, // {int} Max depth of nested blocks (within functions)
  "maxerr"        : 200, // {int} Maximum error before stopping
  "maxparams"     : false, // {int} Max number of formal params allowed per function
  "maxstatements" : false, // {int} Max number statements per function
  "noarg"         : true, // true: Prohibit use of `arguments.caller` and `arguments.callee`
  "nonbsp"        : true, // true: Prohibit "non-breaking whitespace" characters.
  "nonew"         : true, // true: Prohibit use of constructors for side-effects (without assignment)
  "notypeof"      : false, // true: Tolerate invalid typeof operator values
  "shadow"        : "inner", // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
  "singleGroups"  : false, // true: Prohibits the use of the grouping operator when it is not strictly required.
  "undef"         : true, // true: Require all non-global variables to be declared (prevents global leaks)
  "unused"        : false,// Unused variables:
  //   true       : all variables, last function parameter
  //   "vars"     : all variables only
  //   "strict"   : all variables, all function parameters

  // Relaxing
  "asi"       : false, // true: Tolerate Automatic Semicolon Insertion (no semicolons)
  "boss"      : false, // true: Tolerate assignments where comparisons would be expected
  "debug"     : false, // true: Allow debugger statements e.g. browser breakpoints.
  "elision"   : false, // true: Allow ES3 elision, or empty elements (for example, [1, , , 4]).
  "eqnull"    : true,  // true: Tolerate use of `== null`
  "esnext"    : false, // true: Allow ES.next (ES6) syntax (ex: `const`)
  "evil"      : false, // true: Tolerate use of `eval` and `new Function()`
  "expr"      : false, // true: Tolerate `ExpressionStatement` as Programs
  "lastsemic" : false, // true: Tolerate omitting a semicolon for the last statement of a 1-line block
  "loopfunc"  : false, // true: Tolerate functions being defined in loops
  "moz"       : false, // true: Allow Mozilla specific syntax (extends and overrides esnext features)
  "noyield"   : false, // true: Tolerate generator functions with no yield statement in them.
  "plusplus"  : false, // true: Prohibit use of `++` & `--`
  "proto"     : false, // true: Tolerate using the `__proto__` property
  "scripturl" : false, // true: Tolerate script-targeted URLs
  "strict"    : false,  // true: Requires all functions run in ES5 Strict Mode
  "supernew"  : false, // true: Tolerate `new function () { ... };` and `new Object;`
  "validthis" : true,  // true: Tolerate using this in a non-constructor function
  "withstmt"  : false, // true: Suppresses warnings about the use of the with statement. BAD!

  // Environments
  "browser"     : true, // Web Browser (window, document, etc)
  "browserify"  : false, // Browserify (node.js code in the browser)
  "couch"       : false, // CouchDB
  "devel"       : true,  // Development/debugging (alert, confirm, etc)
  "dojo"        : false, // Dojo Toolkit
  "jasmine"     : false, // Jasmine
  "jquery"      : true, // jQuery
  "mocha"       : false, // Mocha
  "mootools"    : false, // MooTools
  "node"        : true,  // Node.js
  "nonstandard" : false, // Widely adopted globals (escape, unescape, etc)
  "phantom"     : false, // PhantomJS
  "prototypejs" : false, // Prototype and Scriptaculous
  "qunit"       : false, // QUnit
  "rhino"       : true,  // Rhino
  "shelljs"     : false, // ShellJS
  "typed"       : false, // Globals for typed array constructions
  "worker"      : false, // Web Workers
  "wsh"         : false, // Windows Scripting Host
  "yui"         : false, // Yahoo User Interface

  // Custom Globals
  "globals": {
    "env"       : true
  }
}
